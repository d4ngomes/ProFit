@model X.PagedList.IPagedList<ProFit.Web.Models.Aluno>
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Common;

@{
    ViewData["Title"] = "Alunos";
}

<div class="row mt-4 mb-4">
    <div class="col-sm">
        <h2>Lista de Alunos</h2>
    </div>
    <div class="col-sm">
        <a class="btn btn-primary" asp-action="Create"><i class="fas fa-user-plus"></i> Novo Aluno</a>
    </div>
</div>

<form asp-action="Index" method="get">
    <div class="row col-md-8 mb-5">
        <div class="col-sm-7"><input type="text" class="form-control" placeholder="Buscar por nome ou e-mail" name="busca"></div>
        <div class="col-sm"><input class="btn btn-success" type="submit" value="Buscar" /></div>
    </div>
</form>

@if (TempData["Msg"] != null)
{
    <div class="row mt-4 mb-4 col-md-8">
        <div class="alert alert-success" role="alert">
            @TempData["Msg"]
        </div>
    </div>
}

<div class="row col-md-8 mb-5">
    @if (Model.Count() > 0)
    {
        <div class="card">
            <div class="card-body">
                <table class="table table-striped border">
                    <thead>
                        <tr>
                            <th scope="col">@Html.DisplayNameFor(m => Model[0].Nome)</th>
                            <th scope="col">@Html.DisplayNameFor(m => Model[0].Email)</th>
                            <th scope="col">@Html.DisplayNameFor(m => Model[0].Ativo)</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(m => item.Nome)</td>
                                <td>@Html.DisplayFor(m => item.Email)</td>
                                <td><input class="form-check-input" asp-for="@item.Ativo" type="checkbox" disabled></td>
                                <td>
                                    <a class="btn btn-secondary btn-sm" asp-action="Details" asp-route-id="@item.Id"><i class="fas fa-list"></i></a>
                                    <a class="btn btn-success btn-sm" asp-action="Edit" asp-route-id="@item.Id"><i class="fas fa-edit"></i></a>
                                    <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id"><i class="far fa-trash-alt"></i></a>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
                <div class="card-footer border">
                    <div>
                        @Html.PagedListPager(
                           Model,
                           pagina => Url.Action("Index", new { pagina }),
                           new PagedListRenderOptions
                                { FunctionToTransformEachPageLink = (liTag, aTag) => { 
                                    aTag.Attributes.Add("class", "page-link".ToString());
                                   return aTag;
                                },
                               LiElementClasses = new[] { "page-item" },
                               UlElementClasses = new[] { "pagination  justify-content-left" }
                                })
                    </div>
                </div>

            </div>
        </div>
    }
    else
    {
        <p>Nenhum aluno cadastrado.</p>
    }
</div>